<?php
namespace Home\Controller;
use Org\Util\Des;
use Think\Controller;
use Think\Model;

class AppController extends CommonController {
    protected $model;

    public function _initialize(){
        parent::_initialize();
        $this->model=new Model();
    }
    public function addCustomInfo(){
        if(IS_POST){
            set_time_limit(0);
            if(empty( $_FILES['file_stu']['name'])){
                $this->error('请上传卡号文件',U('Card/addCustomInfo'));
            }
            $upload=$this->_upload('excel');
            if(is_string($upload)){
                $this->error($upload,U('Card/addCustomInfo'));
            }else{
                $filename=PUBLIC_PATH.$upload['file_stu']['savepath'].$upload['file_stu']['savename'];
                $exceldate=$this->import_excel($filename);

                $model=new model();
                $c=$c1=0;
                $str='';
                $where['cal.status']='Y';
                $where['cu.namechinese']=array('EXP','IS NULL');
                $where['cu.personid']=array('EXP','IS NULL');
                $where['cal.activedate']=array('egt','20150801');
                $where['c.brandid']='6889';
                $list=$model->table('card_active_logs')->alias('cal')
                    ->join('__CARDS__ c on cal.cardno=c.cardno')
                    ->join('__CUSTOMS_C__ cc on cc.cid=c.customid')
                    ->join('__CUSTOMS__ cu on cu.customid=cc.customid')
                    ->field('cal.cardno,cu.namechinese,cu.customid,cu.PersonID,cal.status')->where($where)
                    ->order('cal.activedate asc')->limit(0,1500)->select();
                foreach($exceldate as $key=>$val){
                    $data=array(
                        'namechinese'=>$val[0],
                        'linktel'=>$val[1],
                        'personid'=>$val[2],
                        'sex'=>$val[3],
                        'cityid'=>$val[4],
                        'birthday'=>substr($val[2],6,8)
                    );
                    $map['customid']=$list[$key]['customid'];
                    if(D('customs')->where($map)->save($data)){
                        //$str.='客户编号：'.$list['customid'].'，名字:'.$val[0].'<br/>';
                        $c++;
                    }else{
                        $c1++;
                    }
                }
                echo '执行成功'.$c.'条，失败'.$c1.'条执行的客户编号如下'.'<br/>';
                //echo $str;
                //$this->success('执行成功'.$c.'条，失败'.$c1.'条');
            }
        }else{
            $this->display();
        }
    }

    public function addCustomInfo1(){
        $customs = array();
        $model=new model();
        $c=$c1=0;
        $str='';
        $where['cal.status']='Y';
        $where['cu.namechinese']=array('EXP','IS NULL');
        $where['cu.personid']=array('EXP','IS NULL');
        $where['cal.activedate']=array('egt','20150801');
        $where['c.brandid']='6889';
        $list=$model->table('card_active_logs')->alias('cal')
            ->join('__CARDS__ c on cal.cardno=c.cardno')
            ->join('__CUSTOMS_C__ cc on cc.cid=c.customid')
            ->join('__CUSTOMS__ cu on cu.customid=cc.customid')
            ->field('cal.cardno,cu.namechinese,cu.customid,cu.PersonID,cal.status')->where($where)
            ->order('cal.activedate asc')->limit(0,1000)->select();
        foreach($customs as $key=>$val){
            $sexNum=substr($val['o_cardnum'],-2,1);
            $sex=$sexNum%2==0?'女':'男';
            $data=array(
                'namechinese'=>$val['o_name'],
                'linktel'=>$val['o_mobile'],
                'personid'=>$val['o_cardnum'],
                'sex'=>$sex,
                'cityid'=>'379',
                'birthday'=>substr($val['o_cardnum'],6,8)
            );
            $map['customid']=$list[$key]['customid'];
            if(D('customs')->where($map)->save($data)){
                //$str.='客户编号：'.$list[$key]['customid'].'，名字:'.$val['o_name'].'<br/>';
                //echo $str;
                $c++;
            }else{
                $c1++;
            }

        }
        echo '执行成功'.$c.'条，失败'.$c1.'条执行的客户编号如下'.'<br/>';
    }

    public function test0(){
        $startStr='1346011156170813460191346018134601713460161346015134601413462711346012
        1346272134601013409441563703156370215637011563700155186913460131346290134629913462981346297
        1346296134629513462941346293134627013462911561707134627913462781346277134627613462751346274
        13462731346292155370015617091553708155370715537061553705155370415537031553900155370115539011551876
        1551875155187415518731551872155187113781411553702155390915617061561705156170415617031561702156170115617001553709
        1553977135076915539081553907155390615539051553904155390315539021560370136037013503401363960136337013629871362370
        1361987136137013653701360840136637013598391359838135983713598361359835135983413598331360864137034213781401374969
        13749681374967137496613749651374964136437013703701359830137008313700701369370136837013673841367383136737013703971352380
        13569301352634135263313526321352631135263013523831359832135238113569331352370135231713523161352315135231413513701551868
        13523821359231135037013592391359238135923713592361359235135923413569311359232135693213592301356939135693813569371356936
        13569351356934135983113592331314801158247513148091314808131480713148061314805131480413183291314802131934013148001314057
        15824701582471158247215824731551870131480313233871327103132710213271011327100132432713243261324325131830413233881582476

        13043031863973134612113461201346119134611813461171560375186397413461241860390186037515690721569071156642315664221346116135034115093771352375135232713523261351375135076213461221350342134612313461291346128134612713461261346125156494713503751561737156494915637541563753156375215637511563750156375615617381563757156173615617351561734156173315617321352536156173915638691561730156494615649451563999156399815639971563755156399515649481563868156386715638661563865156375915637581563996150375015037571503756150375515037541503753155160715037511503880150368915036881503687150368615036851500390150375215038861589341155160913303751330390133237513323901503758150388715037591503885150388415038831503882150388113949481503888158934815003751593753159375215937511593750159039015937551589349137832115893471589346158934515893441589343158934215903751393865155160613949471394946139494513939961393995159375413938661394949139375913937581393757139375615093791393754139386713233731321382132138313213841321385132337015516081323372131940413233741323375132431613243171324318132431913233711314053131037513137501313751131375213137531313774132138113137761321380131405413183321318333131833413183351327142131377513295031327140159389115938901593759159375815937571593893132909215938941551600155160115516021551603155160415516051593756132737513937531327143132714413271451327146132714715938921327149132714113273881327389132830513283061328375159389513271481373376158934013461131393755134611513721881373393137337513409491373377137337813733791373390137339118937551372189134093318937561893757189375818937591340375134093013461111340932134611013409341340945134094613409471340948137339413409311378244137818713781881378189137824013782411373392137824313781841378245137824613782471378248137824913783201378242137810813749541374955137495613749571374958137810513781861378107137818513781091378180137818113781821378183134611213781061583695158375215837511583750158369915836981393752158369615837551583694158369315836921583691158369015803901583697158867115886791588678158867715886761588675158867415837531588672189375415886701583759158375815837571346114158375415886731890375133937513393761339377133937813393791533375133840615343881533390189039018937501893751189375218937531393751158375615343751334375133337515343871333390133840513343901334399133440013346711334672133467313353751338375133839013383991553769131373913137601551892155376015537611553762155376315537641553765155376615544061553768131373815544051597859159785813033701597857155376713033781503769159785613103761303371130337313033741303375130337213033771313737130337913043761307494130837613101761310397131240313137361303376135260415225341350376135076013513761352376135238813523891352390135239713087011352600159785513462081352603134620713526051352606135260713782911378292137829313782941378295137829613782971378298137829913526021341998189376118937621893763189376418937651893766189376718937681893769134037613403971341995134620913419971380376134199913461511346152134615313461541346200134620113462021346203134620413462051346206134199613949161393767139376813937691393970139397113939721393973139397413939751393976139397713939781378376139491513937601394917139491813949191522470152247115224721522473152247415225301522531152253215225331393979138397315343971383760138376113837621383763138376413837651383766138376713837681383769138397013937641383972139376113839741383975138397613839771383978138397913849721384973138497413849751384976139037613783971383971151944815139791518825151882615188271518828151882915188551518856151885715188581518859151944513193861519447151397615194491520376131376113137621313763131376413140601314061131746413183361318337189376015194461508349150397015039711503972150397315039741503975150397615039771503978150397915083451508346151397815083481513977151037615137601513761151376215137631513764151376515137661513767151376815137691513975131938715083471551859155142215514231551424155142515514261551427155142815514291551431155143215514331551760131938515518581329599155189015518911335369133537613383761338397153037615333761533397153437615343901352601155176113253811319388131938913213861321387132138813213891323376132337713233781323397132433013243311551421132538015514041325382132538313253841325385132711213271131327376132739713283071328376132839713290991890376132433215637641583970156642415649181564916156491515638621563861156386015637691563768156376715670651563765156726815637631563762156376115637601560376155443515544341554433155443215544311356977156376613343761356976135697513569741356973135697213569711356970135260913526081334676133467515670641334397158397113333971333376133239713323761330397133037618639701860397186037615690831567269133467415937661554430159382815938271593826159382515938241593823159382215938211593820159376915939701593767159397115937651593764159376315937621593761159376015903971590376158397915839781583977159376815978381583972158397315839741583975158397615978541522535159785313523991597852159785115938291597839156491915978371597836159783515939791593978159397715939761593975159397415939731593972159785015837661500376152902515290261529027152902815290291580376158039715837601583761158376215837631529023156491715290221356978158376815837691503768150376715037661503765150376415037631503762150376115037601500397158376415236751522536152253715225381522539152364015236411523642152364315236441523670152367115236721529024152367415837671523676152376015237611523762152376315237641523765152376615237671523768152376915290201529021152367313673761372311
        13673081367309136734513673461367347136637613673491583765136837613683971369376136939713700761372310136734813613761356979';
        $arr=explode('',$startStr);
        array_pop($arr);
        $str='';
        for($i=0;$i<10020;$i++){
            $startNum=trim($arr[array_rand($arr)]);
            $endNum=mt_rand(1000,9999);
            $telNum=$startNum.$endNum;
            $str.=$telNum.'<br/>';
        }
        echo $str;
    }
    public function delData(){
        $dataArr=array();
        foreach($dataArr as $key=>$val){
            $map['cardno']=$val['cardno'];
            $cardInfo=D('cards')->where($map)->find();
            $map1=array('customid'=>$cardInfo['customid'],'type'=>'00');
            $data1=array('amount'=>0);
            if(D('account')->where($map1)->save($data1)){
                echo 'Yeah<br/>';
            }

            $card_purchase=D('card_purchase_logs')->where($map)->field('purchaseid')->find();
            $map2=array('purchaseid'=>$card_purchase['purchaseid']);
            if(D('custom_purchase_logs')->where($map2)->delete()){
                echo '111<br/>';
            }
            if(D('card_purchase_logs')->where($map)->delete()){
                echo '222<br/>';
            }
            D('card_purchase_logs')->where($map)->delete();
        }
    }
    public function cleanReturnCards(){
        $cardArr=array();
        $model=new Model();
        foreach($cardArr as $key=>$val){
            $cardno=trim($val['cardno']);
            $model->startTrans();
            $where=array('cardno'=>$cardno);
            $card=$model->table('cards')->field('customid')->where($where)->find() ;
            $accountMap=array('customid'=>$card['customid']);
            M('account')->where($accountMap)->delete();
            echo $model->getLastSql()."<br/>";
            $customscMap=array('cid'=>$card['customid']);
            $customsc=M('customs_c')->where($customscMap)->find();
            M('customs_c')->where($customscMap)->delete();
            echo $model->getLastSql()."<br/>";
            $customsMp=array('customid'=>$customsc['customid']);
            M('customs')->where($customsMp)->delete();
            echo $model->getLastSql()."<br/>";
            M('trade_wastebooks')->where($where)->delete();
            echo $model->getLastSql()."<br/>";
            M('cards')->where($where)->delete();
            echo $model->getLastSql()."<br/>";
            //exit;
//            $cardplMap=array('cardno'=>$cardno);
//            $cardpllist=M('card_purchase_logs')->where($cardplMap)->select();
//            //print_r($cardpllist);exit;
//            foreach($cardpllist as $key=>$value){
//                $purchaseid=$value['purchaseid'];
//                $customplMap=array('purchaseid'=>$purchaseid);
//                M('custom_purchase_logs')->where($customplMap)->delete();
//                echo $model->getLastSql()."<br/>";
//            }
//            M('card_purchase_logs')->where($cardplMap)->delete();
//            echo $model->getLastSql()."<br/>";
//            $cardalMap=array('cardno'=>$cardno);
//            M('card_active_logs')->where($cardalMap)->delete();
//            echo $model->getLastSql()."<br/>";

//            $quanczMap=array('customid'=>$card['customid']);
//            $quanList=M('quancz')->where($quanczMap)->select();
//            if($quanList!=false){
//                M('quancz')->where($quanczMap)->delete();
//                echo $model->getLastSql()."<br/>";
//            }
//            $cardData=array('status'=>'N','customid'=>0);
//            M('cards')->where($where)->save($cardData);
//            echo $model->getLastSql()."<br/>";

            $model->commit();
            //$model->rollback();
        }
    }

    public function creatRandNum(){
        $array=array('X','1','2','3','4','5','6','7','8','9');
        //$array=array('X','A','B','C');
        $b="";
        for($j=0;$j<250;$j++){
            $a="";
            for($i=0;$i<6;$i++){
                $key=array_rand($array,1);
                $a.=$array[$key];
            }
            $b.=$a.'<br/>';
        }
        echo $b;
    }
    public function cleanCoinData(){
        $list=M('coin_account')->select();
        $sql='';
        foreach($list as $key=>$val){
            $sql.="UPDATE ACCOUNT SET AMOUNT=0 WHERE CUSTOMID='{$val['cardid']}' AND TYPE='01';<br/>";
//            $data=array('amount'=>0);
//            M('account')->where($map)->save($data);
           // echo M('account')->getLastSql().'<br/>';
        }
        echo $sql;
    }
    public function cleanCoinConsume(){
        $map=array();
        $list=M('coin_consume')->where($map)->select();
        $sql='';
        foreach($list as $key=>$val){
            $sql.="DELETE FROM TRADE_WASTEBOOKS WHERE TRADEID='{$val['tradeid']}';<br/>";
//            $data=array('amount'=>0);
//            M('account')->where($map)->save($data);
            // echo M('account')->getLastSql().'<br/>';
        }
        echo $sql;
    }

    public function changePwd(){
        $pwdArray=array();
        $data=array();
        $sql="";
        foreach($data as $key=>$val){
            $cardno=$val['cardno'];
            $pwd=$pwdArray[$val['pwd']];
            $sql.="UPDATE CARDS SET CARDPASSWORD='BFD0C613A11BF88E' WHERE CARDNO='{$cardno}';<br/>";
            //$sql.="UPDATE CARDS SET CARDPASSWORD='{$pwd}' WHERE CARDNO='{$cardno}';<br/>";
        }
        echo $sql;
    }

    public function cleanCards(){
        //exit('123');
        $array=array(
            array("cardno"=>"6889374888800004200"),
            array("cardno"=>"6889374888800004201"),
            array("cardno"=>"6889374888800004202"),
            array("cardno"=>"6889374888800004203"),
            array("cardno"=>"6889374888800004204"),
            array("cardno"=>"6889374888800004205"),
            array("cardno"=>"6889374888800004206"),
            array("cardno"=>"6889374888800004207"),
            array("cardno"=>"6889374888800004208"),
            array("cardno"=>"6889374888800004209"),
            array("cardno"=>"6889374888800004210"),
            array("cardno"=>"6889374888800004211"),
            array("cardno"=>"6889374888800004212"),
            array("cardno"=>"6889374888800004213"),
            array("cardno"=>"6889374888800004214"),
            array("cardno"=>"6889374888800004215"),
            array("cardno"=>"6889374888800004216"),
            array("cardno"=>"6889374888800004217"),
            array("cardno"=>"6889374888800004218"),
            array("cardno"=>"6889374888800004219"),
            array("cardno"=>"6889374888800004220"),
            array("cardno"=>"6889374888800004221"),
            array("cardno"=>"6889374888800004222"),
            array("cardno"=>"6889374888800004223"),
            array("cardno"=>"6889374888800004224"),
            array("cardno"=>"6889374888800004348"),
            array("cardno"=>"6889374888800004349"),
            array("cardno"=>"6889374888800004350"),
            array("cardno"=>"6889374888800004351"),
            array("cardno"=>"6889374888800004352"),
            array("cardno"=>"6889374888800004353"),
            array("cardno"=>"6889374888800004354"),
            array("cardno"=>"6889374888800004355"),
            array("cardno"=>"6889374888800004356"),
            array("cardno"=>"6889374888800004357"),
            array("cardno"=>"6889374888800004358"),
            array("cardno"=>"6889374888800004359"),
            array("cardno"=>"6889374888800004360"),
            array("cardno"=>"6889374888800004361"),
            array("cardno"=>"6889374888800004363"),
            array("cardno"=>"6889374888800004364"),
            array("cardno"=>"6889374888800004365"),
            array("cardno"=>"6889374888800004366"),
            array("cardno"=>"6889374888800004367"),
            array("cardno"=>"6889374888800004368"),
            array("cardno"=>"6889374888800004369"),
            array("cardno"=>"6889374888800004370"),
            array("cardno"=>"6889374888800004371"),
            array("cardno"=>"6889374888800004372"),
            array("cardno"=>"6889374888800004373"),
            array("cardno"=>"6889374888800004374"),
            array("cardno"=>"6889374888800004375"),
            array("cardno"=>"6889374888800004376"),
            array("cardno"=>"6889374888800004377"),
            array("cardno"=>"6889374888800004378"),
            array("cardno"=>"6889374888800004379"),
            array("cardno"=>"6889374888800004380"),
            array("cardno"=>"6889374888800004381"),
            array("cardno"=>"6889374888800004382"),
            array("cardno"=>"6889374888800004383"),
            array("cardno"=>"6889374888800004384"),
            array("cardno"=>"6889374888800004385"),
            array("cardno"=>"6889374888800004386"),
            array("cardno"=>"6889374888800004387"),
            array("cardno"=>"6889374888800004388"),
            array("cardno"=>"6889374888800004225"),
            array("cardno"=>"6889374888800004226"),
            array("cardno"=>"6889374888800004227"),
            array("cardno"=>"6889374888800004229"),
            array("cardno"=>"6889374888800004230"),
            array("cardno"=>"6889374888800004246"),
            array("cardno"=>"6889374888800004248"),
            array("cardno"=>"6889374888800004249"),
            array("cardno"=>"6889374888800004250"),
            array("cardno"=>"6889374888800004251"),
            array("cardno"=>"6889374888800004252"),
            array("cardno"=>"6889374888800004253"),
            array("cardno"=>"6889374888800004254"),
            array("cardno"=>"6889374888800004255"),
            array("cardno"=>"6889374888800004256"),
            array("cardno"=>"6889374888800004257"),
            array("cardno"=>"6889374888800004258"),
            array("cardno"=>"6889374888800004260"),
            array("cardno"=>"6889374888800004261"),
            array("cardno"=>"6889374888800004262"),
            array("cardno"=>"6889374888800004263"),
            array("cardno"=>"6889374888800004264"),
            array("cardno"=>"6889374888800004265"),
            array("cardno"=>"6889374888800004389"),
            array("cardno"=>"6889374888800004390"),
            array("cardno"=>"6889374888800004391"),
            array("cardno"=>"6889374888800004392"),
            array("cardno"=>"6889374888800004393"),
            array("cardno"=>"6889374888800004394"),
            array("cardno"=>"6889374888800004395"),
            array("cardno"=>"6889374888800004396"),
            array("cardno"=>"6889374888800004397"),
            array("cardno"=>"6889374888800004398"),
            array("cardno"=>"6889374888800004399"),
            array("cardno"=>"6889374888800004400"),
            array("cardno"=>"6889374888800004401"),
            array("cardno"=>"6889374888800004402"),
            array("cardno"=>"6889374888800004403"),
            array("cardno"=>"6889374888800004404"),
            array("cardno"=>"6889374888800004405"),
            array("cardno"=>"6889374888800004406"),
            array("cardno"=>"6889374888800004407"),
            array("cardno"=>"6889374888800004408"),
            array("cardno"=>"6889374888800004409"),
            array("cardno"=>"6889374888800004410"),
            array("cardno"=>"6889374888800004411"),
            array("cardno"=>"6889374888800004412"),
            array("cardno"=>"6889374888800004413"),
            array("cardno"=>"6889374888800004414"),
            array("cardno"=>"6889374888800004415"),
            array("cardno"=>"6889374888800004416"),
            array("cardno"=>"6889374888800004417"),
            array("cardno"=>"6889374888800004418"),
            array("cardno"=>"6889374888800004419"),
            array("cardno"=>"6889374888800004420"),
            array("cardno"=>"6889374888800004421")
        );
        $sql='';
//        $activeLog=M('card_active_logs');
//        $cardpl=M('card_purchase_logs');
//        $custompl=M('custom_purchase_logs');
//        $auditLog=M('audit_logs');
//        foreach($array as $key=>$val){
//            $linktel=$val['linktel'];
//            $sql.="delete from customs where linktel='{$linktel}' and countrycode='君邻会会员';<br/>";
//        }
        $model=new Model();
        foreach($array as $key=>$val){
            $model->startTrans();
            $cardno=$val['cardno'];
            $map=array('cardno'=>$cardno);
            $card=$model->table('cards')->where($map)->find();
            $cardid=$card['customid'];
            $map1=array('cid'=>$cardid);
            $custom=$model->table('customs_c')->where($map1)->field('customid')->find();
            //$map5=array('customid'=>$custom['customid']);
            //$model->table('customs')->where($map5)->delete();
            echo $model->getLastSql().';<br/>';
            $map11=array('cid'=>$cardid,'customid'=>$custom['customid']);
            $model->table('customs_c')->where($map11)->delete();
            echo $model->getLastSql().';<br/>';
            $map2=array('customid'=>$cardid);
            $model->table('account')->where($map2)->delete();
            echo $model->getLastSql().';<br/>';
            $map3=array('cardno'=>$cardno);
            $model->table('card_active_logs')->where($map3)->delete();
            echo $model->getLastSql().';<br/>';
            $cardpls=$model->table('card_purchase_logs')->where($map3)->field('purchaseid')->select();
            foreach($cardpls as $k=>$v){
                $where=array('purchaseid'=>$v['purchaseid'],'customid'=>$custom['customid']);
                $model->table('custom_purchase_logs')->where($where)->delete();
                echo $model->getLastSql().';<br/>';

                $map5=array('purchaseid'=>$v['purchaseid']);
                $adutid= $model->table('audit_logs')->where($map5)->max('auditid');
                $map6=array('purchaseid'=>$v['purchaseid'],'auditid'=>$adutid);
                $model->table('audit_logs')->where($map6)->delete();
                echo $model->getLastSql().';<br/>';
            }
            $model->table('card_purchase_logs')->where($map3)->delete();
            echo $model->getLastSql().';<br/>';
            $data4=array('status'=>'N','customid'=>0);
            $model->table('cards')->where($map3)->save($data4);
            echo $model->getLastSql().';<br/>';

            $model->table('trade_wastebooks')->where($map)->delete();
            echo $model->getLastSql().';<br/>';

            $map5=array('customid'=>$cardid);
            $model->table('quancz')->where($map5)->delete();
            echo $model->getLastSql().';<br/>';
            echo $custom['customid'].';<br/>';

            $model->table('ecard_bind')->where(array('cardno'=>$cardno))->delete();

            $model->table('coin_account')->where(array('cardid'=>$cardid))->delete();

            $model->table('coin_consume')->where(array('cardid'=>$cardid))->delete();
            $model->table('fangzg_c')->where(array('cardno'=>$cardno))->delete();
            $model->commit();
        }
        //$model->rollback();
        //$model->commit();
    }
    public function createSql1(){
        $array=array();
        $sql='';
        $cardpl=M('card_purchase_logs');
        $custompl=M('custom_purchase_logs');
        $cards=M('cards');
        $customsc=M('customs_c');
        foreach($array as $key=>$val){
            $cardno=$val['cardno'];
            $customid=$val['customid'];
            $map1=array('cardno'=>$cardno,'placeddate'=>'20160420');
            $list1=$cardpl->where($map1)->field('purchaseid')->find();
            $purchaseid=$list1['purchaseid'];
            $map2=array('purchaseid'=>$purchaseid,'placeddate'=>'20160420');
            $list2=$custompl->where($map2)->field('customid')->find();
            $map3=array('cardno'=>$cardno);
            $list3=$cards->where($map3)->field('customid')->find();
            $map4=array('cid'=>$list3['customid']);
            $list4=$customsc->where($map4)->select();

            if(count($list4)==0){
                $sql.="insert into customs_c values('{$list2['customid']}','{$list3['customid']}');<br/>";
            }else{
                $sql.=$cardno.'<br/>';
            }
        }
        echo $sql;
    }

    public function createSql(){
        $array=array();
        $trade=M('trade_wastebooks');
        $sql='';
        foreach($array as $key=>$val){
            //$val['amount'].'--'.$list['tradepoint'].'---'.
            $map=array('eorderid'=>'e+_0001-'.$val['eorderid']);
            $list=$trade->where($map)->field('tradeid,tradepoint')->find();
//            if($list['tradepoint']!=$val['amount']){
//                echo '0<br/>';
//            }else{
//                echo '1<br/>';
//            }
            $sql.="update trade_wastebooks set panterid='{$val['panterid']}',termno='00000001',termposno='0000001' where tradeid='{$list['tradeid']}';<br/>";
            $sql.="update coin_consume set panterid='{$val['panterid']}' where tradeid='{$list['tradeid']}';<br/>";
        }
        echo $sql;
        exit;
        $sql='';
        //$cardal=M('card_active_logs');
        //$cardpl=M('card_purchase_logs');
        //$custompl=M('custom_purchase_logs');
        foreach($array as $key=>$val){
            $cardno=$val['areaname'];
            $cityname=$val['cityname'];
            $sql.="insert into wy_area values ('{$val['areaname']}','{$val['cityname']}','');<br/>";
//            $cardno=$val['cardno'];
//            $sql.="UPDATE CARDS SET PANTERID='00000324' WHERE CARDNO='{$cardno}';<br/>";
            //$sql.="UPDATE CARDS SET CARDFEE=1 WHERE CARDNO='{$cardno}';<br/>";
//            $customid=$val['customid'];
//            $cid=$val['cid'];
//            $sql.="DELETE FROM CUSTOMS_C WHERE CUSTOMID='{$customid}' and cid='{$cid}';<br/>";
            /*$map=array('cardno'=>$cardno);
            $sql.="UPDATE CARD_ACTIVE_LOGS SET USERID='0000000000000087' where cardno='{$cardno}';<br/>";
            //$sql.="UPDATE CARD_PURCHASE_LOGS SET PLACEDDATE='20160420' where cardno='{$cardno}';<br/>";
            $list=$cardpl->where($map)->field('purchaseid')->find();
            $purchaseid=$list['purchaseid'];
            $sql.="UPDATE CUSTOM_PURCHASE_LOGS SET CHECKID='0000000000000087' WHERE PURCHASEID='{$purchaseid}';<br/>";
            //$sql.="UPDATE audit_logs SET PLACEDDATE='20160420' WHERE PURCHASEID='{$purchaseid}';<br/>";*/
        }
        echo $sql;
    }
    public function test1(){
        $a=$this->getNextcardno('6888',8);
        echo $a;
    }

    public function updateDate(){
        $array=array();
        $model=new Model();
        $sql='';
        $card_purchase_logs=M('card_purchase_logs');
        foreach($array as $key=>$val){
            $cardno=$val['cardno'];
            $sql.="update card_active_logs set activedate='20160429' where cardno='{$cardno}';<br/>";
            $sql.="update card_purchase_logs set placeddate='20160429' where cardno='{$cardno}';<br/>";
            $map=array('cardno'=>$cardno,'placeddate'=>'20160509');
            $cardpl=$card_purchase_logs->where($map)->find();
            $purchaseid=$cardpl['purchaseid'];
            $sql.="update custom_purchase_logs set placeddate='20160429',checkdate='20160429' where purchaseid='{$purchaseid}';<br/>";
            $sql.="update audit_logs set placeddate='20160429' where purchaseid='{$purchaseid}';<br/>";
        }
        echo $sql;
    }

    public function addCustoms(){
        //$customid=$this->getnextcode('customs',8);
        $customid=$this->getFieldNextNumber('customid');
        $nameArr=array(
            array('namechinese'=>'王翠英','linktel'=>'13837153810','personid'=>'410105197812264462')
        );
        $model=new Model();
        foreach($nameArr as $val){
            //$customid=$this->getnextcode('customs',8);
            $customid=$this->getFieldNextNumber('customid');
            $namechinese=$val['namechinese'];
            $linktel=$val['linktel'];
            $personid=$val['personid'];
            $sql="insert into customs(customid,namechinese,placeddate,customlevel,linktel,personid) ";
            $sql.="values('{$customid}','{$namechinese}','".date('Ymd')."','建业线上会员')";
            $model->execute($sql);
        }
    }

    public function test2(){
        $array=array();
        $fangzgc=M('fangzg_c');
        $cardpl=M('card_purchase_logs');
        foreach($array as $key=>$val){
            $cardno=$val['cardno'];
            $map=array('cardno'=>$cardno,'tradeid'=>array('EXP','IS NOT NULL'));
            $list=$fangzgc->where($map)->find();
            if(!empty($list)){
                $map2=array('cardno'=>$cardno);
                $list2=$cardpl->where($map2)->field('card_purchaseid')->find();
                $card_purchaseid=$list2['card_purchaseid'];
                $data=array('card_purchaseid'=>$card_purchaseid);
                $map3=array('cardno'=>$cardno,'tradeid'=>$list['tradeid']);
                $fangzgc->where($map3)->save($data);
                echo $fangzgc->getLastSql();
            }

        }
    }

    //检测手机号是否注册
    public function jlhCheckCustom(){
        if (!empty( $_FILES['file_stu']['name'])) {
            $m=$n=0;
            set_time_limit(0);
            $tmp_file = $_FILES ['file_stu'] ['tmp_name'];
            $file_types = explode(".", $_FILES ['file_stu'] ['name']);
            $file_type = $file_types [count($file_types) - 1];
            /*判别是不是.xls文件，判别是不是excel文件*/
            if (strtolower($file_type) != "xls" && strtolower($file_type) != "xlsx") {
                $this->error('不是Excel文件，重新上传');
            }
            /*设置上传路径*/
            $savePath = './Public/upfile/Excel/';
            /*以时间来命名上传的文件*/
            $str = date('Ymdhis');
            $file_name = $str . "." . $file_type;
            /*是否上传成功*/
            if (!copy($tmp_file, $savePath . $file_name)) {
                $this->error('上传失败');
            }
            $exceldate = $this->import_excel($savePath . $file_name, 1);
            $arr=$array=array();
            foreach($exceldate as $k=>$v){
                $arr['cardno']=$v[1];
                $arr['namechinese']=$v[2];
                $arr['sex']=$v[3];
                $arr['personid']=$v[5];
                $arr['linktel']=$v[4];
                $arr['unitname']=$v[6];
                $array[]=$arr;
            }

            foreach($array as $key=>$val){
                $linktel=trim($val['linktel']);
                $map=array('linktel'=>$linktel,'customlevel'=>'建业线上会员');
                $custom=M('customs')->where($map)->find();
                if($custom==false){
                    $jlh1[]=$val;//未注册过手机号
                }else{
                    $jlh[]=$val;//注册过手机号
                }
            }
            if(count($jlh1)>0){
                $m=$this->jlh($jlh1,1);
            }
            if(count($jlh)>0){
                $n=$this->jlh($jlh,2);
            }
            $counts=$m+$n;
            $this->success('会员批量开卡成功'.$counts.'条',U('App/jlhCheckCustom'));
        }
        $this->display();
    }

    //君邻会新会员导入（注册过手机号）
    public function jlh($array,$type){
        $sql='';
        $m=0;
        foreach($array as $key=>$val){
            $linktel=trim($val['linktel']);
            $namechinese=$val['namechinese'];
            $sex=$val['sex'];
            $personid=$val['personid'];
            $unitname=$val['unitname'];
            $this->model->startTrans();
            if($type==1){
                $customid=$this->getFieldNextNumber('customid');
                $currentDate=date('Ymd');
                if($key==0){
                    $sql.="INSERT ALL INTO CUSTOMS (CUSTOMID,LINKTEL,NAMECHINESE,SEX,PERSONID,UNITNAME,CUSTOMLEVEL,PLACEDDATE,COUNTRYCODE) VALUES";
                    $sql.=" ('{$customid}','{$linktel}','{$namechinese}','{$sex}','{$personid}','{$unitname}','建业线上会员','{$currentDate}','君邻会会员')";
                }else{
                    $sql.=" INTO CUSTOMS (CUSTOMID,LINKTEL,NAMECHINESE,SEX,PERSONID,UNITNAME,CUSTOMLEVEL,PLACEDDATE,COUNTRYCODE) VALUES";
                    $sql.=" ('{$customid}','{$linktel}','{$namechinese}','{$sex}','{$personid}','{$unitname}','建业线上会员','{$currentDate}','君邻会会员')";
                }
                $cardArr[]=$val['cardno'];
            }else{
                $map=array('linktel'=>$linktel,'customlevel'=>'建业线上会员');
                $customInfo=M('customs')->where($map)->find();
                $customid=$customInfo['customid'];
                $sql="UPDATE  CUSTOMS SET NAMECHINESE='{$namechinese}',SEX='{$sex}',PERSONID='{$personid}',UNITNAME='{$unitname}' where customid='{$customid}'";
                $customIf=$this->model->execute($sql);
                if($customIf==true){
                    $cardArr=array($val['cardno']);
                    $bool=$this->openCard($cardArr,$customid);
                    if($bool==true){
                        ++$m;
                        $this->model->commit();
                        if($key==count($array)-1){
                            return  $m;
                        }
                    }else{
                        $this->model->rollback();
                    }
                }else{
                    $this->model->rollback();
                }
            }
        }
        if($type==1){
            $sql.=" SELECT 1 FROM DUAL";
            $customIf=$this->model->execute($sql);
            if($customIf==true){
                $bool=$this->openCard($cardArr,$customid);
                if($bool==true){
                    $this->model->commit();
                    return  count($array);
                }else{
                    $this->model->rollback();
                }
            }else{
                $this->model->rollback();
            }
        }
    }

    protected function openCard($cardArr,$customid,$amount=0){
        if(empty($cardArr)) return false;
        $userid=$this->userid;
        $rechargedAmount=0;
        foreach($cardArr as $key=>$val){
            $waitMoney=$amount-$rechargedAmount;
            $cardno=$val;
            $userstr= substr($userid,12,4);
            $purchaseid=$this->getFieldNextNumber('purchaseid');
            $purchaseid=$userstr.$purchaseid;
            $currentDate=date('Ymd');
            $checkDate=date('Ymd');
            $where['cardno']=$cardno;
            $cardinfo=M('cards')->where($where)->field('panterid')->find();
            if($amount==0){
                $rechargeMoney=0;
            }else{
                if($waitMoney>=5000){
                    $rechargeMoney=5000;
                }else{
                    $rechargeMoney=$waitMoney;
                }
            }
            //写入购卡单并审核
            $customplSql="insert into custom_purchase_logs values('".$customid."','".$purchaseid."','".$currentDate."','现金','";
            $customplSql.=$this->userid."','{$rechargeMoney}',NULL,'{$rechargeMoney}',0,'{$rechargeMoney}','{$rechargeMoney}'";
            $customplSql.=",1,'','购卡','1','{$cardinfo['panterid']}','".$userid."',NULL,'0',";
            $customplSql.="'0',NULL,'00000000','".date('H:i:s')."','".$checkDate."','".date('H:i:s',time()+300)."',NULL)";
            $customplIf=$this->model->execute($customplSql);

            //写入审核单
            $auditid=$this->getFieldNextNumber('auditid');
            $auditlogsSql="insert into audit_logs values ('".$auditid."','".$purchaseid."','审核通过',";
            $auditlogsSql.="'购卡审核通过','".date('Ymd')."','".$userid ."','".date('H:i:s',time()+300)."')";
            $auditlogsIf=$this->model->execute($auditlogsSql);

            //写入购卡充值单
            $cardpurchaseid=$this->getFieldNextNumber('cardpurchaseid');
            $cardplSql="INSERT INTO card_purchase_logs VALUES('{$cardpurchaseid}','{$purchaseid}',";
            $cardplSql.="'{$cardno}','{$rechargeMoney}','0','".$currentDate."','".date('H:i:s',time()+300)."','1','后台充值',";
            $cardplSql.="'{$userid}','{$cardinfo['panterid']}','','00000000')";
            $cardplIf=$this->model->execute($cardplSql);

            $where1['customid']=$customid;
            $card=$this->model->table('cards')->where($where1)->find();
            if($card==false){
                //看会员编号一致的卡是否存在，不存在，以会员编号作为卡的编号
                $cardId=$customid;
            }else{
                //若存在，则需另外生成卡编号
                $cardId=$this->getFieldNextNumber('customid');
                $customSql="UPDATE customs SET cardno='teshu' where customid='".$customid."'";
                $customIf=$this->model->execute($customSql);
            }

            //执行激活操作
            $cardAlSql="INSERT INTO card_active_logs VALUES('{$cardno}','{$userid}',".date('Ymd');
            $cardAlSql.=",'0','Y','00',".date('Ymd').",'".date('H:i:s')."','售卡激活','{$cardId}'";
            $cardAlSql.=",'{$cardinfo['panterid']}','00000000')";
            $cardAlIf=$this->model->execute($cardAlSql);

            //关联会员卡号
            $customcSql="INSERT INTO customs_c(customid,cid) VALUES('".$customid."','".$cardId."')";
            $customsIf=$this->model->execute($customcSql);

            //更新卡状态为正常卡，更新卡有效期；
            $exd=date('Ymd',strtotime("+3 years"));
            $cardSql="UPDATE cards SET status='Y',customid='{$cardId}',cardbalance='{$rechargeMoney}',exdate='{$exd}' where cardno='".$cardno."'";
            $cardIf=$this->model->execute($cardSql);

            //给卡片添加账户并给账户充值
            $acid = $this->getFieldNextNumber('accountid');
            $balanceSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
            $balanceSql.=$acid."','".$cardId."','".$rechargeMoney."','00',NULL)";
            $balanceIf=$this->model->execute($balanceSql);

            $acid = $this->getFieldNextNumber('accountid');
            $pointSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
            $pointSql.=$acid."','".$cardId."','0','01',NULL)";
            $pointIf=$this->model->execute($pointSql);

            if($customplIf==true&&$auditlogsIf==true&&$cardplIf==true&&$cardAlIf==true&&$customsIf==true&&$cardIf==true&&$balanceIf==true&&$pointIf==true){
                $rechargedAmount+=$rechargeMoney;
            }
        }
        if(!bccomp($rechargedAmount,$amount,2)){
            return true;
        }else{
            return false;
        }
    }

    //导入老卡信息
    public function test(){
        $array=array();
        $cards=M('cards');
        foreach($array as $key=>$val){
            $cardno=$val['cardno'];
            $amount=$val['amount'];
            $name=$val['name'];
            //$customid=$this->getnextcode('customs',8);
            $customid=$this->getFieldNextNumber('customid');
            $placeddate=date('Ymd');
            $map=array('cardno'=>$cardno);
            $card=$cards->where($map)->field('customid')->find();
            //var_dump($card);exit;
//            if($card==false){
//                echo '1<br/>';
//            }else{
//                echo '0<br/>';
//            }
            if($card==false){
                $this->model->startTrans();
                $customSql="insert into customs(customid,namechinese,placeddate,panterid) values('{$customid}','{$name}','{$placeddate}','FFFFFFFF')";
                $customIf=$this->model->execute($customSql);
                $cardSql="insert into cards(customid,cardno,status,panterid,cardpassword,exdate,groupid，dcflag,makedate,cardfee) ";
                $cardSql.="values ('{$customid}','{$val['cardno']}','Y','FFFFFFFF','BFD0C613A11BF88E','20190101','FFFFFFFF',0,'20170727',1)";
                $cardIf=$this->model->execute($cardSql);

                $amount=$val['amount'];

                if($customIf==true){
                    $openIf=$this->openCard(array($cardno),$customid,$amount);
                }else{
                    $this->model->rollback();
                    echo '创建会员失败<br/>';
                }

                if($openIf==true){
                    $this->model->commit();
                }else{
                    $this->model->rollback();
                }
//                $customcSql="insert into customs_c values('{$customid}','{$customid}')";
//                $customcIf=$this->model->execute($customcSql);
//                //$acid = $this->getnextcode('account',8);
//                $acid=$this->getFieldNextNumber('accountid');
//                $balanceSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
//                $balanceSql.=$acid."','".$customid."','0','00',NULL)";
//                $balanceIf=$this->model->execute($balanceSql);
//
//                //$acid = $this->getnextcode('account',8);
//                $acid=$this->getFieldNextNumber('accountid');
//                $coinSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
//                $coinSql.=$acid."','".$customid."','0','01',NULL)";
//                $coinIf=$this->model->execute($coinSql);
//
//                //$acid = $this->getnextcode('account',8);
//                $acid=$this->getFieldNextNumber('accountid');
//                $pointSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
//                $pointSql.=$acid."','".$customid."','0','04',NULL)";
//                $pointIf=$this->model->execute($pointSql);
//                if($customIf==true&&$cardIf==true&&$customcIf==true&&$balanceIf==true&&$pointIf==true&&$coinIf==true){
//                    $this->model->commit();
//                }else{
//                    $this->model->rollback();
//                }
            }
        }
    }

    public function test222(){
        $array=array();
        $model=new Model();
        foreach($array as $key=>$val){
            $cardno=$val['cardno'];
            $map=array('c.cardno'=>$cardno);
            $custom=$model->table('cards')->alias('c')->join('customs_c cc on c.customid=cc.cid')
                ->join('customs cu on cu.customid=cc.customid')->field('cu.customid')->where($map)->find();
            //print_r($custom);exit;
            $map3=array('cardno'=>$cardno);
            $model->table('card_active_logs')->where($map3)->delete();
            echo $model->getLastSql().';<br/>';
            $cardpls=$model->table('card_purchase_logs')->where($map3)->field('purchaseid')->select();
            foreach($cardpls as $key=>$val){
                $where=array('purchaseid'=>$val['purchaseid'],'customid'=>$custom['customid']);
                $model->table('custom_purchase_logs')->where($where)->delete();
                echo $model->getLastSql().';<br/>';

                $map5=array('purchaseid'=>$val['purchaseid']);
                $adutid= $model->table('audit_logs')->where($map5)->max('auditid');
                $map6=array('purchaseid'=>$val['purchaseid'],'auditid'=>$adutid);
                $model->table('audit_logs')->where($map6)->delete();
                echo $model->getLastSql().';<br/>';
            }
            $model->table('card_purchase_logs')->where($map3)->delete();
            echo $model->getLastSql().';<br/>';
        }
    }

    //删除积分
    public function test333(){
        $array=array(
            array('cardno'=>'2336370888801018116'),
        );
        $model=new Model();
        foreach($array as $key=>$val){
            $model->startTrans();
            $cardno=$val['cardno'];
            $map=array('cardno'=>$cardno);
            $card=$model->table('cards')->where($map)->find();
            $cardid=$card['customid'];
            $map1=array('cid'=>$cardid);
            $custom=$model->table('customs_c')->where($map1)->field('customid')->find();
            $map5=array('customid'=>$custom['customid']);
            $model->table('customs')->where($map5)->delete();
            echo $model->getLastSql().';<br/>';
            $map11=array('cid'=>$cardid,'customid'=>$custom['customid']);
            $model->table('customs_c')->where($map11)->delete();
            echo $model->getLastSql().';<br/>';
            $map2=array('customid'=>$cardid);
            $model->table('account')->where($map2)->delete();
            echo $model->getLastSql().';<br/>';
            $model->table('cards')->where($map)->delete();
            echo $model->getLastSql().';<br/>';
            //$model->commit();
            $model->rollback();
        }
    }

    //君邻会判断两张卡的会员
    public function test4444(){
        $map=array('c.panterid'=>'00000447','c.status'=>'Y');
        $cards=M('cards');
        $customsC=M('customs_c');
        $customs=M('customs');
        $custom=$cards->alias('c')->join('customs_c cc on cc.cid=c.customid')
            ->join('customs cu on cu.customid=cc.customid')->where($map)
            ->field('cu.customid,c.customid cid,c.cardno,cu.namechinese')->select();
        foreach($custom as $key=>$val){
            $map1=array('cu.customid'=>$val['customid'],'c.panterid'=>'00000447','c.status'=>'Y');
            $c=$customs->alias('cu')->join('customs_c cc on cc.customid=cu.customid')
                ->join('cards c on c.customid=cc.cid')->where($map1)->count();
            if($c>1){
                echo $val['customid'].'&nbsp;'.$val['cid'].'&nbsp;'.$val['cardno'].'&nbsp;'.$val['namechinese'].'<br/>';
            }
        }
    }

    //一家余额转移
    public function test125(){
        $cardArr=array(
//            array('cardno'=>'6886371800000111199','amount'=>'4819.1'),
//            array('cardno'=>'6886371800000119250','amount'=>'108'),
//            array('cardno'=>'6886371800000116395','amount'=>'246'),
        );
        $userid='0000000000000204';
        $model=new Model();
        foreach($cardArr as $val){
            $model->startTrans();
            $waitAmount=$val['amount'];
            $cardno=$val['cardno'];
            $userstr= substr($userid,12,4);
            //$purchaseid=$this->getnextcode('PurchaseId ',12);//获得PurchaseId 12位编号
            $purchaseid=$this->getFieldNextNumber('purchaseid');
            $purchaseid=$userstr.$purchaseid;
            $currentDate=date('Ymd');
            $checkDate=date('Ymd');

            $where['c.cardno']=$cardno;
            $where['a.type']='00';
            $card=$model->table('cards')->alias('c')->join('account a on a.customid=c.customid')
                ->where($where)->field('c.customid,a.amount,c.panterid')->find();
            $customplSql="insert into custom_purchase_logs values('".$card['customid']."','".$purchaseid."','".$currentDate."','现金','";
            $customplSql.=$userid."','".$waitAmount."',NULL,'".$waitAmount."',0,'".$waitAmount."','".$waitAmount;
            $customplSql.="',1,'','','1','".$card['panterid']."','".$userid."',NULL,'1',";
            $customplSql.="'0',NULL,'00000000','".date('H:i:s')."','".$checkDate."','".date('H:i:s',time()+300)."',NULL)";

            //写入审核单
            //$auditid=$this->getnextcode('audit_logs',16);
            $auditid=$this->getFieldNextNumber('auditid');
            $auditlogsSql="insert into audit_logs values ('".$auditid."','".$purchaseid."','审核通过',";
            $auditlogsSql.="'一家充值审核通过','".date('Ymd')."','".$userid ."','".date('H:i:s',time()+300)."')";

            $customplIf=$model->execute($customplSql);
            $auditlogsIf=$model->execute($auditlogsSql);

            //$cardpurchaseid=$this->getnextcode('card_purchase_logs',18);
            $cardpurchaseid=$this->getFieldNextNumber('cardpurchaseid');
            //写入充值单
            $cardplSql="INSERT INTO card_purchase_logs VALUES('{$cardpurchaseid}','{$purchaseid}',";
            $cardplSql.="'{$cardno}','{$waitAmount}','0','".$currentDate."','".date('H:i:s',time()+300)."','1','',";
            $cardplSql.="'{$userid}','{$card['panterid']}','','00000000')";
            $cardplIf=$model->execute($cardplSql);

            $balanceSql="UPDATE account SET amount=nvl(amount,0)+".$waitAmount." where customid='".$card['customid']."' and type='00'";
            $balanceIf=$this->model->execute($balanceSql);
            if($customplIf==true&&$auditlogsIf==true&&$cardplIf==true&&$balanceIf==true){
                $model->commit();
            }else{
                $model->rollback();
            }
        }
    }

    public function test000(){
        $where=array('linktel'=>array('EXP','IS NOT NULL'),'customlevel'=>'建业线上会员');
        $list=M('customs')->field('linktel')->where($where)->group('linktel')->select();
        foreach($list as $key=>$val){
            echo $val['linktel'].'<br/>';
        }
    }
    public function test0909(){
        $nameArr=array(
        //array('namechinese'=>'王伟','linktel'=>'18620291611','personid'=>'410821198302080017')
        );
        $model=new Model();
        foreach($nameArr as $val){
            //$customid=$this->getnextcode('customs',8);
            $customid=$this->getFieldNextNumber('customid');
            $namechinese=$val['namechinese'];
            $linktel=$val['linktel'];
            $personid=$val['personid'];
            $sql="insert into customs(customid,namechinese,placeddate,customlevel,linktel,personid) ";
            $sql.="values('{$customid}','{$namechinese}','".date('Ymd')."','建业线上会员1','{$linktel}','{$personid}')";
            $model->execute($sql);
        }
        exit;
        $array=array();
        $sql='';
        foreach($array as $key=>$val){
            $tradeid=trim($val['tradeid']);
            $sql.="UPDATE TRADE_WASTEBOOKS SET PLACEDDATE='20160802' WHERE tradeid='{$tradeid}';<br/>";
        }
        echo $sql;
    }

    //酒店礼品卡导入
    public function test111(){
        $des=new  Des('238ab9c87d4569a59b0c8d7e9A0D9C8B238ab9c87d4569a5');
        $arr=array(
            //array("cardno"=>"2081180140100076011","pwd"=>"471842","namechinese"=>"艾美礼品卡401"),
        );
        $model=new Model();
        foreach($arr as $key=>$val){
            $model->startTrans();
            $customid=$this->getnextcode('customs',8);
            $customid=$this->getFieldNextNumber('customid');
            $customSql="insert into customs(customid,namechinese,placeddate) ";
            $customSql.="values('{$customid}','{$val['namechinese']}','".date('Ymd')."')";
            $customIf=$model->execute($customSql);

            $pwd=$des->doEncrypt($val['pwd']);

            $cardSql="INSERT INTO CARDS(CARDNO,CARDKIND,CUSTOMID,CARDPASSWORD,EXDATE,STATUS,CARDBALANCE,PANTERID,BRANDID) VALUES";
            $cardSql.=" ('{$val['cardno']}','2081','{$customid}','{$pwd}','20201231','Y',0,'00000126','2081')";
            $cardIf=$model->execute($cardSql);

            $customcSql="INSERT INTO customs_c(customid,cid) VALUES('".$customid."','".$customid ."')";
            $customsCIf=$model->execute($customcSql);

            //$acid = $this->getnextcode('account',8);
            $acid = $this->getFieldNextNumber('accountid');
            $balanceSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
            $balanceSql.=$acid."','".$customid."','0','00',NULL)";
            $balanceIf=$model->execute($balanceSql);

            //$acid = $this->getnextcode('account',8);
            $acid = $this->getFieldNextNumber('accountid');
            $pointSql="INSERT INTO account(accountid,customid,amount,type,quanid) VALUES('";
            $pointSql.=$acid."','".$customid."','0','01',NULL)";
            $pointIf=$model->execute($pointSql);
            if($customIf==true&&$cardIf==true&&$customsCIf==true&&$balanceIf==true&&$pointIf==true){
                $model->commit();
            }else{
                $model->rollback();
            }
        }
    }

    //房掌柜已充值订单撤回
    public function test0000(){
        //echo '123';exit;
        set_time_limit(0);
        $array=array();
        $model=new Model();
        $sql="";
        foreach($array as $key=>$val){
            $map=array('cpl1.cardno'=>$val['cardno'],'cpl.tradeflag'=>0);
            $list=$model->table('custom_purchase_logs')->alias('cpl')
                ->join('card_purchase_logs cpl1 on cpl1.purchaseid=cpl.purchaseid')
                ->where($map)->field('cpl.purchaseid,cpl1.card_purchaseid')
                ->find();
            $sql.="update custom_purchase_logs set panterid='{$val['panterid']}' where purchaseid='{$list['purchaseid']}';commit;<br/>";
            $sql.="update card_purchase_logs set panterid='{$val['panterid']}' where card_purchaseid='{$list['card_purchaseid']}';commit;<br/>";
        }
        echo $sql;exit;
        $array=array();
        $cards=M('cards');
        $model=new Model();
        foreach($array as $key=>$val){
            $cardno=$val['cardno'];
            $tradeid=$val['tradeid'];
            $amount=$val['amount'];
            $map=array('cardno'=>$cardno);
            $card=$cards->where($map)->field('customid')->find();
            $accountSql="update account set amount=amount+{$amount} where customid='{$card['customid']}' and type='00'";
            $fangzcSql="update fangzg_c set status=0,consumedamount=consumedamount-{$amount} where cardno='{$cardno}' and tradeid='{$tradeid}'";
            $tradeSql="delete from trade_wastebooks where cardno='{$cardno}' and placeddate='20300101'";
            $fangzgSql="update fangzg set status=1,consumedmoney=consumedmoney-{$amount} where tradeid='{$tradeid}'";
            $model->startTrans();
            $accountIf=$model->execute($accountSql);
            $fangzcIf=$model->execute($fangzcSql);
            $tradeIf=$model->execute($tradeSql);
            $fangzgIf=$model->execute($fangzgSql);
//            echo $accountSql.'<br/>';
//            echo $fangzcSql.'<br/>';
//            echo $tradeSql.'<br/>';
//            echo $fangzgSql;exit;
            if($accountIf==true&&$fangzcIf&&$tradeIf==true&&$fangzgIf==true){
                $model->commit();
            }else{
                $model->rollback();
            }
        }
    }
    //艾美酒店卡密码初始化
    public function resetcode(){
        $this->des=new  Des('238ab9c87d4569a59b0c8d7e9A0D9C8B238ab9c87d4569a5');
        $array=array('6882371088800016888','6882371088800016889','6882371088800016890','6882371088800016891','6882371088800016892','6882371088800016893','688237108880001689',            '6882371088800016895','6882371088800016896','6882371088800016897','6882371088800016898','6882371088800016899','6882371088800016900','6882371088800016901',                  '6882371088800016902','6882371088800016903','6882371088800016904','6882371088800016905','6882371088800016906','6882371088800016907','6882371088800016908',                   '68823710888000','6909','6882371088800016910','6882371088800016911','6882371088800016912','6882371088800016913','6882371088800016914','6882371088800016915',                 '6882371088800016916','6882371088800016917','6882371088800016919','6882371088800016920','6882371088800016921','6882371088800016922','6882371088800016923',                   '6882371088800016924','6882371088800016925','6882371088800016926','6882371088800016927','6882371088800016928','6882371088800016929','6882371088800016930',                   '6882371088800016931','6882371088800016932','6882371088800016933','6882371088800016934','6882371088800016935','6882371088800016936','6882371088800016918');
        foreach($array as $k=>$v){
            $map=array('cardno'=>$v,'status'=>'N','makedate'=>'20170927');
            $cardif = M('cards')->where($map)->find();
            if(true==$cardif){
                $cardpass = '888888';
                $cardpass = $this->des->doEncrypt($cardpass);
                $bool = M('cards')->where($map)->save(array('cardpassword'=>$cardpass));
                if(true==$bool){
                    $this->success('卡密码重置成功！');
                }else
                    $this->error('请联系管理员！');
            }else{
                $this->error('请检查卡号 或卡必须是正常卡！');
            }
        }
    }

}




